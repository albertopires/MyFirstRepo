# Git Prompt
https://github.com/git/git/blob/master/contrib/completion/git-prompt.sh

# Ignore tracked files locally
git update-index --assume-unchanged path/to/file.txt

# Aliases
# Nice log
git config --global alias.lol 'log --pretty=format:"%h %s" --graph'


# Some nice configs

git config --local user.name "Alberto Pires"
git config --local user.email mrpenguin2005@gmail.com

git config --global color.ui true
git config --global core.editor vim
git config credential.helper 'cache --timeout 360'


Branches:
git push --delete origin hotfix-000 (delete remote branch)
git branch -a (list all branches)
git remote prune origin (remove deleted branches)
git checkout -b newbranch v1.0 (create a new branch from a tag)
git remote show origin
git push -u origin local_branch (Push local branch to remote)
git diff --name-status master..refactor # Show diff files between branches

Tags:
Renaming:
git tag new old
git tag -d old
git push origin :refs/tags/old
git push --tags

Log:
git log origin/master ^master
git branch -a --contains 7e4f1e7 # Finding what branch a commit came from

Rebase:
git reflog
git reset --hard ORIG_HEAD    # Undo a rebase right after the command
git reset --hard HEAD@{n}     # reset from n th commit

Merging
# Default option for git mergetool (meld) LOCAL BASE REMOTE -> save to MERGED
git config --global mergetool.meld.cmd 'meld $LOCAL $BASE $REMOTE -o $MERGED'  
# Show version of files
git show :2:master.txt > local.txt
git show :3:master.txt > remote.txt


# Simpler view compare just between LOCAL and REMOTE -> save to MERGED
git config --global mergetool.meld.cmd 'meld $LOCAL $REMOTE -o $MERGED'


-- !!! COOL !!!
Clone your project from on repo to another different one, like from Bitbucket to Github
$ cd $HOME
$ git clone --bare https://git.fedorahosted.org/the/path/to/my_repo.git
$ cd my_repo.git
$ git push --mirror https://github.com/my_username/my_repo.git
$ cd ..
$ rm -rf my_repo.git
